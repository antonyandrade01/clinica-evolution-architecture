# Arquivo: docker-compose.yml

services:
  # Serviço 1: Sua Aplicação Flask
  flask_app:
    build: .
    container_name: clinica_flask_app
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - uploads_data:/app/static/img/uploads
      - ./storage:/app/storage 
    env_file:
      - .env
    depends_on:
      db_mysql:
        condition: service_healthy 
      onlyoffice:
        condition: service_started

  # Serviço do Banco de Dados 
  db_mysql:
    image: mariadb:11.4       
    container_name: clinica_mariadb_db
    restart: always
    environment:
      # Use as mesmas credenciais do arquivo .env
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD} 
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
    healthcheck:
      # Healthcheck do mysqladmin
      test: ["CMD-SHELL", "mariadb -u ${DB_USER} -p'${DB_PASSWORD}' -e 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # Serviço de Cache - Redis
  redis:
    image: redis:7.2              #
    container_name: onlyoffice_redis
    restart: always

  # Serviço de Mensageria - RabbitMQ
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: onlyoffice_rabbitmq
    restart: always

  # Serviço 2: Servidor ONLYOFFICE
  onlyoffice:
    image: onlyoffice/documentserver:9.0
    container_name: onlyoffice_server
    ports:
      - "8081:80"
    restart: always
    depends_on:
      - redis
      - rabbitmq
    environment:
      - REDIS_SERVER_HOST=redis
      - AMQP_URI=amqp://guest:guest@rabbitmq
      - JWT_SECRET=${ONLYOFFICE_JWT_SECRET}
      - JWT_ENABLED=true
      - JWT_HEADER=Authorization
      - ONLYOFFICE_VERIFY_PEER_OFF=true

  # Interface Gráfica para o Banco de Dados
  adminer:
    image: adminer
    restart: always
    ports:
      - "8082:8080" # Mapeia a porta 8082 para a 8080 do container
    depends_on:
      - db_mysql
      
# Define volumes nomeados para persistir os arquivos
volumes:
  uploads_data: