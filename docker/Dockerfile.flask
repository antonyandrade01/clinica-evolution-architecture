# --- Estágio de Build ---
FROM python:3.13.5-alpine3.22 AS builder

# Define o diretório de trabalho
WORKDIR /app

# Instala dependências do sistema
RUN apk add --no-cache gcc musl-dev linux-headers

# Ambiente virtual para isolar as dependências da aplicação
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Instala as dependências no ambiente virtual
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copia o restante do código da aplicação
COPY . .

# --- Estágio de Runtime ---
FROM python:3.13.5-alpine3.22 AS runtime

# Cria um usuário não-root e um grupo
RUN apk add --no-cache su-exec curl && \
    addgroup -S appgroup && \
    adduser -S appuser -G appgroup

# Define o diretório de trabalho
WORKDIR /app
COPY --from=builder /opt/venv /opt/venv

# Copia o código da aplicação do estágio de build
COPY --from=builder --chown=appuser:appgroup /app /app

# Copia o script de entrypoint para dentro da imagem
COPY ./docker/entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT ["entrypoint.sh"]

# Define as variáveis de ambiente para usar o ambiente virtual
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1

EXPOSE 5000

CMD ["gunicorn", "--workers", "2", "--worker-class", "eventlet", "--bind", "0.0.0.0:5000", "app:app"]